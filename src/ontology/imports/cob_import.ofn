Prefix(:=<http://purl.obolibrary.org/obo/foodon/imports/cob_import.ofn#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(terms:=<http://purl.org/dc/terms/>)


Ontology(<http://purl.obolibrary.org/obo/foodon/imports/cob_import.ofn>

Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000141))
Declaration(Class(obo:CARO_0001008))
Declaration(Class(obo:CHEBI_10545))
Declaration(Class(obo:CHEBI_33252))
Declaration(Class(obo:CHEBI_36342))
Declaration(Class(obo:CL_0000000))
Declaration(Class(obo:COB_0000011))
Declaration(Class(obo:COB_0000013))
Declaration(Class(obo:COB_0000032))
Declaration(Class(obo:COB_0000073))
Declaration(Class(obo:COB_0000077))
Declaration(Class(obo:COB_0000080))
Declaration(Class(obo:COB_0000082))
Declaration(Class(obo:COB_0000083))
Declaration(Class(obo:COB_0000119))
Declaration(Class(obo:COB_0000120))
Declaration(Class(obo:ENVO_01000813))
Declaration(Class(obo:GO_0032991))
Declaration(Class(obo:IAO_0000005))
Declaration(Class(obo:IAO_0000030))
Declaration(Class(obo:IAO_0000033))
Declaration(Class(obo:IAO_0000104))
Declaration(Class(obo:OBI_0000245))
Declaration(Class(obo:OBI_0000260))
Declaration(Class(obo:PATO_0000125))
Declaration(Class(obo:PCO_0000000))
Declaration(Class(obo:PR_000000001))
Declaration(Class(obo:SEPIO_0000048))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:COB_0000078))
Declaration(ObjectProperty(obo:COB_0000081))
Declaration(ObjectProperty(obo:COB_0000087))
Declaration(ObjectProperty(obo:IAO_0000136))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000058))
Declaration(ObjectProperty(obo:STATO_0000102))
Declaration(DataProperty(obo:COB_0000511))
Declaration(DataProperty(obo:COB_0000801))
Declaration(AnnotationProperty(obo:COB_based_on))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(dc:description))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(terms:license))
############################
#   Annotation Properties
############################

# Annotation Property: obo:IAO_0000115 (definition)

AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition")

# Annotation Property: obo:IAO_0000412 (imported from)

AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)


############################
#   Object Properties
############################

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000050 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of")
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)

# Object Property: obo:BFO_0000051 (has part)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000051 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part")

# Object Property: obo:COB_0000078 (concretizes)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000078 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000078 "concretizes")
InverseObjectProperties(obo:COB_0000078 obo:RO_0000058)
InverseObjectProperties(obo:COB_0000078 ObjectInverseOf(obo:COB_0000078))

# Object Property: obo:COB_0000081 (intended to realize)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000081 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000081 "intended to realize")

# Object Property: obo:COB_0000087 (realizes)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000087 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000087 "realizes")
ObjectPropertyDomain(obo:COB_0000087 obo:BFO_0000015)
ObjectPropertyRange(obo:COB_0000087 obo:BFO_0000017)

# Object Property: obo:IAO_0000136 (is about)

AnnotationAssertion(obo:COB_based_on obo:IAO_0000136 "http://purl.obolibrary.org/obo/IAO_0000136")
AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000136 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000136 "is about")

# Object Property: obo:RO_0000052 (characteristic of)

AnnotationAssertion(obo:IAO_0000412 obo:RO_0000052 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:RO_0000052 "characteristic of"@en)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)

# Object Property: obo:RO_0000053 (has characteristic)

AnnotationAssertion(obo:IAO_0000412 obo:RO_0000053 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:RO_0000053 "has characteristic")
AnnotationAssertion(rdfs:seeAlso obo:RO_0000053 "https://github.com/oborel/obo-relations/pull/284")
InverseObjectProperties(obo:RO_0000053 ObjectInverseOf(obo:RO_0000053))
InverseFunctionalObjectProperty(obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000053 owl:Thing)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000058 (is concretized as)

AnnotationAssertion(obo:IAO_0000412 obo:RO_0000058 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:RO_0000058 "is concretized as"@en)

# Object Property: obo:STATO_0000102 (executes)

AnnotationAssertion(obo:IAO_0000412 obo:STATO_0000102 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:STATO_0000102 "executes")


############################
#   Data Properties
############################

# Data Property: obo:COB_0000511 (has quantity)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000511 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:COB_0000511 "The range of this property should be a user-defined unit datatype, e.g 182^:cm")
AnnotationAssertion(rdfs:label obo:COB_0000511 "has quantity")
AnnotationAssertion(rdfs:seeAlso obo:COB_0000511 "https://github.com/OBOFoundry/COB/issues/35")
DataPropertyDomain(obo:COB_0000511 obo:BFO_0000020)

# Data Property: obo:COB_0000801 (has number of atomic nuclei)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000801 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000801 "has number of atomic nuclei"@en)
DataPropertyDomain(obo:COB_0000801 obo:BFO_0000040)
DataPropertyRange(obo:COB_0000801 xsd:nonNegativeInteger)



############################
#   Classes
############################

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000015 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000016 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)

# Class: obo:BFO_0000017 (realizable)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000017 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)

# Class: obo:BFO_0000020 (characteristic)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000020 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "characteristic"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000020 "https://github.com/OBOFoundry/COB/issues/65")
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000020 "https://github.com/oborel/obo-relations/pull/284")

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000023 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000034 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000040 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)

# Class: obo:BFO_0000141 (immaterial entity)

AnnotationAssertion(obo:IAO_0000412 obo:BFO_0000141 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000141 "immaterial entity"@en)

# Class: obo:CARO_0001008 (gross anatomical part)

AnnotationAssertion(obo:IAO_0000115 obo:CARO_0001008 "A part of a multicellular organism that is a collection of cell components that are not all contained in one cell.")
AnnotationAssertion(obo:IAO_0000412 obo:CARO_0001008 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:CARO_0001008 "Bodily fluids, such as urine, are currently defined as anatomical entities in UBERON. We should make sure there is a proper home for these here.")
AnnotationAssertion(rdfs:label obo:CARO_0001008 "gross anatomical part"@en)
SubClassOf(obo:CARO_0001008 obo:BFO_0000040)

# Class: obo:CHEBI_10545 (electron)

AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_10545 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_10545 "electron"@en)
SubClassOf(obo:CHEBI_10545 obo:CHEBI_36342)
SubClassOf(obo:CHEBI_10545 obo:COB_0000013)
SubClassOf(obo:CHEBI_10545 DataHasValue(obo:COB_0000801 "0"^^xsd:integer))

# Class: obo:CHEBI_33252 (atomic nucleus)

AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_33252 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:CHEBI_33252 "Some people may be uncomfortable calling every proton an atomic nucleus")
AnnotationAssertion(rdfs:comment obo:CHEBI_33252 "This is equivalent to CHEBI:33252")
AnnotationAssertion(rdfs:label obo:CHEBI_33252 "atomic nucleus"@en)
SubClassOf(obo:CHEBI_33252 obo:CHEBI_36342)

# Class: obo:CHEBI_36342 (subatomic particle)

AnnotationAssertion(obo:IAO_0000412 obo:CHEBI_36342 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:CHEBI_36342 "subatomic particle"@en)
SubClassOf(obo:CHEBI_36342 obo:BFO_0000040)

# Class: obo:CL_0000000 (cell)

AnnotationAssertion(obo:IAO_0000115 obo:CL_0000000 "A material entity that has a plasma membrane and results from cellular division.")
AnnotationAssertion(obo:IAO_0000412 obo:CL_0000000 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:CL_0000000 "CL and GO definitions of cell differ based on inclusive or exclusive of cell wall, etc.")
AnnotationAssertion(rdfs:comment obo:CL_0000000 "We struggled with this definition. We are worried about circularity. We also considered requiring the capability of metabolism.")
AnnotationAssertion(rdfs:label obo:CL_0000000 "cell"@en)
SubClassOf(obo:CL_0000000 obo:BFO_0000040)

# Class: obo:COB_0000011 (atom)

AnnotationAssertion(obo:IAO_0000115 obo:COB_0000011 "A material entity consisting of exactly one atomic nucleus and the electron(s) orbiting it.")
AnnotationAssertion(obo:IAO_0000412 obo:COB_0000011 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:COB_0000011 "This atom is closely related to ChEBI's atom, but not exactly equivalent to.")
AnnotationAssertion(rdfs:label obo:COB_0000011 "atom"@en)
EquivalentClasses(obo:COB_0000011 DataHasValue(obo:COB_0000801 "1"^^xsd:integer))
SubClassOf(obo:COB_0000011 obo:BFO_0000040)
SubClassOf(obo:COB_0000011 ObjectSomeValuesFrom(obo:BFO_0000051 obo:CHEBI_33252))

# Class: obo:COB_0000013 (molecular entity)

AnnotationAssertion(obo:IAO_0000115 obo:COB_0000013 "A material entity that consists of two or more atoms that are all connected via covalent bonds such that any atom can be transitively connected with any other atom.")
AnnotationAssertion(obo:IAO_0000412 obo:COB_0000013 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:COB_0000013 "This molecular entity is different than ChEBI's 'molecular entity'.")
AnnotationAssertion(rdfs:comment obo:COB_0000013 "We would like to have cardinality restrictions on the logic, but there are some technical limitations.")
AnnotationAssertion(rdfs:label obo:COB_0000013 "molecular entity"@en)
SubClassOf(obo:COB_0000013 obo:BFO_0000040)
SubClassOf(obo:COB_0000013 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000011))

# Class: obo:COB_0000032 (geographical location)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000032 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000032 "geographical location"@en)
SubClassOf(obo:COB_0000032 obo:BFO_0000141)

# Class: obo:COB_0000073 (gene product)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000073 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000073 "gene product")
SubClassOf(obo:COB_0000073 obo:COB_0000013)

# Class: obo:COB_0000077 (action specification)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000077 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000077 "action specification")
SubClassOf(obo:COB_0000077 obo:IAO_0000033)
SubClassOf(obo:COB_0000077 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000077))
SubClassOf(obo:COB_0000077 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000005))

# Class: obo:COB_0000080 (complex of molecular entities)

AnnotationAssertion(obo:IAO_0000115 obo:COB_0000080 "A complex of two or more molecular entities that are not covalently bound.")
AnnotationAssertion(obo:IAO_0000412 obo:COB_0000080 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000080 "complex of molecular entities")
SubClassOf(obo:COB_0000080 obo:BFO_0000040)
SubClassOf(obo:COB_0000080 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000013))

# Class: obo:COB_0000082 (planned process)

AnnotationAssertion(obo:IAO_0000115 obo:COB_0000082 "A process that is initiated by an agent who intends to carry out a plan to achieve an objective through one or more actions as described in a plan specification.")
AnnotationAssertion(obo:IAO_0000412 obo:COB_0000082 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000082 "planned process")
SubClassOf(obo:COB_0000082 obo:BFO_0000015)
SubClassOf(obo:COB_0000082 ObjectSomeValuesFrom(obo:COB_0000081 obo:OBI_0000260))
SubClassOf(obo:COB_0000082 ObjectSomeValuesFrom(obo:COB_0000087 obo:SEPIO_0000048))

# Class: obo:COB_0000083 (failed planned process)

AnnotationAssertion(obo:IAO_0000412 obo:COB_0000083 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000083 "failed planned process")
SubClassOf(obo:COB_0000083 obo:COB_0000082)

# Class: obo:COB_0000119 (evaluant role)

AnnotationAssertion(obo:COB_based_on obo:COB_0000119 "OBI:0000067")
AnnotationAssertion(obo:IAO_0000412 obo:COB_0000119 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:COB_0000119 "evaluant role")
SubClassOf(obo:COB_0000119 obo:BFO_0000023)

# Class: obo:COB_0000120 (information representation)

AnnotationAssertion(obo:COB_based_on obo:COB_0000120 "http://purl.obolibrary.org/obo/IAO_0000015")
AnnotationAssertion(obo:IAO_0000412 obo:COB_0000120 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:COB_0000120 "Pier 'representational entity'")
AnnotationAssertion(rdfs:comment obo:COB_0000120 "This captures: pattern of writing in a book; neural state in the brain, electronic charges in computer memory etc")
AnnotationAssertion(rdfs:label obo:COB_0000120 "information representation")
EquivalentClasses(obo:COB_0000120 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000030))
SubClassOf(obo:COB_0000120 obo:BFO_0000020)

# Class: obo:ENVO_01000813 (geophysical entity)

AnnotationAssertion(obo:IAO_0000412 obo:ENVO_01000813 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:ENVO_01000813 "geophysical entity")
SubClassOf(obo:ENVO_01000813 obo:BFO_0000040)

# Class: obo:GO_0032991 (protein-containing macromolecular complex)

AnnotationAssertion(obo:IAO_0000412 obo:GO_0032991 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:GO_0032991 "This is not covalently bonded, which conflicts with changes to the parent definition.")
AnnotationAssertion(rdfs:label obo:GO_0032991 "protein-containing macromolecular complex")
SubClassOf(obo:GO_0032991 obo:COB_0000080)
SubClassOf(obo:GO_0032991 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000073))

# Class: obo:IAO_0000005 (objective specification)

AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000005 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000005 "objective specification")
SubClassOf(obo:IAO_0000005 obo:IAO_0000033)

# Class: obo:IAO_0000030 (information)

AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000030 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:IAO_0000030 "Pier: 'data, information or knowledge'. OR 'representation")
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information")

# Class: obo:IAO_0000033 (directive information entity)

AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000033 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000033 "directive information entity")
SubClassOf(obo:IAO_0000033 obo:IAO_0000030)

# Class: obo:IAO_0000104 (plan specification)

AnnotationAssertion(obo:IAO_0000412 obo:IAO_0000104 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000104 "plan specification")
SubClassOf(obo:IAO_0000104 obo:IAO_0000033)
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:COB_0000077))
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000005))

# Class: obo:OBI_0000245 (organization)

AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000245 obo:cob.owl)
AnnotationAssertion(rdfs:comment obo:OBI_0000245 "Should revisit if we can place outside of material entity - a collection of roles.")
AnnotationAssertion(rdfs:label obo:OBI_0000245 "organization"@en)
SubClassOf(obo:OBI_0000245 obo:BFO_0000040)

# Class: obo:OBI_0000260 (plan)

AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000260 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000260 "plan"@en)
SubClassOf(obo:OBI_0000260 obo:BFO_0000017)
SubClassOf(obo:OBI_0000260 obo:COB_0000120)
SubClassOf(obo:OBI_0000260 ObjectSomeValuesFrom(obo:COB_0000078 obo:IAO_0000104))
SubClassOf(obo:OBI_0000260 ObjectAllValuesFrom(ObjectInverseOf(obo:COB_0000087) obo:COB_0000082))

# Class: obo:PATO_0000125 (mass)

AnnotationAssertion(obo:IAO_0000412 obo:PATO_0000125 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:PATO_0000125 "mass"@en)
SubClassOf(obo:PATO_0000125 obo:BFO_0000020)
SubClassOf(obo:PATO_0000125 ObjectSomeValuesFrom(obo:RO_0000052 obo:BFO_0000040))

# Class: obo:PCO_0000000 (collection of organisms)

AnnotationAssertion(obo:IAO_0000412 obo:PCO_0000000 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:PCO_0000000 "collection of organisms")
SubClassOf(obo:PCO_0000000 obo:BFO_0000040)

# Class: obo:PR_000000001 (protein)

AnnotationAssertion(obo:IAO_0000412 obo:PR_000000001 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:PR_000000001 "protein"@en)
SubClassOf(obo:PR_000000001 obo:COB_0000013)

# Class: obo:SEPIO_0000048 (agent role)

AnnotationAssertion(obo:IAO_0000116 obo:SEPIO_0000048 "A role realized by a participant in a process such that the participant causes the process.")
AnnotationAssertion(obo:IAO_0000412 obo:SEPIO_0000048 obo:cob.owl)
AnnotationAssertion(rdfs:label obo:SEPIO_0000048 "agent role")
SubClassOf(obo:SEPIO_0000048 obo:BFO_0000023)


SubObjectPropertyOf(ObjectPropertyChain(obo:COB_0000087 obo:COB_0000078) obo:STATO_0000102)
AnnotationAssertion(dc:description obo:cob.owl "COB brings together key terms from a wide range of OBO projects to improve interoperability."@en)
AnnotationAssertion(dc:title obo:cob.owl "Core Ontology for Biology and Biomedicine"@en)
AnnotationAssertion(terms:license obo:cob.owl <https://creativecommons.org/publicdomain/zero/1.0/>)
AnnotationAssertion(rdfs:comment obo:cob.owl "This version of COB includes native OBO URIs, only using COB IRIs where equivalent natives could not be found. To see the edition that includes native IRIs, consult cob-edit.owl."@en)
AnnotationAssertion(owl:versionInfo obo:cob.owl "2023-05-12")
)